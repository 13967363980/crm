#pragma checksum "D:\gitCode\crm\lsc\lsc.crm\Views\EnterCustom\AddSalesProjectStateLog.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5f3ebe38cdfebbb231f49549c5919b1c8c545108"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_EnterCustom_AddSalesProjectStateLog), @"mvc.1.0.view", @"/Views/EnterCustom/AddSalesProjectStateLog.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/EnterCustom/AddSalesProjectStateLog.cshtml", typeof(AspNetCore.Views_EnterCustom_AddSalesProjectStateLog))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5f3ebe38cdfebbb231f49549c5919b1c8c545108", @"/Views/EnterCustom/AddSalesProjectStateLog.cshtml")]
    public class Views_EnterCustom_AddSalesProjectStateLog : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\gitCode\crm\lsc\lsc.crm\Views\EnterCustom\AddSalesProjectStateLog.cshtml"
  
    ViewData["Title"] = "添加销售项目变动日志";
    Layout = "~/Pages/_LayoutNone.cshtml";

#line default
#line hidden
            BeginContext(92, 949, true);
            WriteLiteral(@"
<form class=""layui-form"" method=""post"">
    <div class=""layui-form-item"">
        <label class=""layui-form-label"">状态</label>
        <div class=""layui-input-inline"">
            <select class=""layui-form-select"" name=""ProjectState"">
                <option value=""0"">进行中</option>
                <option value=""1"">成功</option>
                <option value=""2"">失败</option>
                <option value=""3"">搁置</option>
                <option value=""4"">放弃</option>
            </select>
        </div>
    </div>
    <div class=""layui-form-item layui-form-text"">
        <label class=""layui-form-label"">说明</label>
        <div class=""layui-input-block"">
            <textarea class=""layui-textarea layui-hide"" name=""Rem"" lay-verify=""content"" id=""Rem"" required></textarea>
        </div>
    </div>
    <div class=""layui-form-item"">
        <div class=""layui-input-inline"">
            <input type=""hidden"" name=""SalesProjectID""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1041, "\"", 1074, 1);
#line 28 "D:\gitCode\crm\lsc\lsc.crm\Views\EnterCustom\AddSalesProjectStateLog.cshtml"
WriteAttributeValue("", 1049, ViewBag.SalesProjectID, 1049, 25, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1075, 1539, true);
            WriteLiteral(@" />
            <button class=""layui-btn"" lay-submit lay-filter=""logform"">立即提交</button>
        </div>
    </div>
</form>
<script type=""text/javascript"">
        var layer
        layui.use(['layer', 'form','layedit'], function () {
            layer = layui.layer
            var form = layui.form;
            var layedit = layui.layedit
            // 创建一个编辑器
            layedit.set({
                uploadImage: {
                    url: '/UploadApi/uploadImage' //接口url
                    , type: 'post' //默认post
                }
            });

            var editIndex = layedit.build('Rem', {
                height: 370 //设置编辑器高度
            });
            form.on('submit(logform)', function (data) {
                layedit.sync(editIndex)
                data.field.Rem = layedit.getContent(editIndex)
                $.post(""/EnterCustom/SaveSalesProjectStateLog"", data.field, function (res) {
                    if (res.code == 1) {
                        layer.msg('保存成功',");
            WriteLiteral(@" { icon: 6 });
                    } else {
                        layer.msg('保存失败', { icon: 5 });
                    }
                })
                return false;
            });

            form.verify({
                Rem: function (value, item) { //value：表单的值、item：表单的DOM对象
                    layedit.sync(editIndex);
                    if (value.length < 30) {
                        return '说明至少要50个字'
                    }
                }
            });
        })
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
